
character.c,55
void character_delete(10,136
uint32_t can_see(25,361

character.h,553
# define CHARACTER_H2,20
typedef struct dungeon dungeon_t;8,84
typedef struct npc npc_t;9,118
typedef struct pc pc_t;10,144
typedef struct dice_t dice_t;11,168
typedef enum kill_type 13,199
  kill_direct,14,224
  kill_avenged,15,239
  num_kill_types16,255
} kill_type_t;17,272
typedef struct character 19,288
  char symbol;20,315
  pair_t position;21,330
  int32_t speed;22,349
  uint32_t alive;23,366
  uint32_t sequence_number;31,931
  npc_t *npc;npc32,959
  pc_t *pc;pc33,973
  uint32_t kills[kills34,985
} character_t;35,1019

dims.h,146
# define DIMS_H2,15
typedef enum dim 7,190
  dim_x,8,209
  dim_y,9,218
  num_dims10,227
} dim_t;11,238
typedef int8_t pair_t[pair_t13,248

dungeon.c,1561
#define DUMP_HARDNESS_IMAGES 19,325
typedef struct corridor_path 21,357
  heap_node_t *hn;hn22,388
  uint8_t pos[pos23,407
  uint8_t from[from24,425
  int32_t cost;25,444
} corridor_path_t;26,460
static uint32_t adjacent_to_room(46,877
static uint32_t is_open_space(54,1138
static int32_t corridor_path_cmp(59,1237
static void dijkstra_corridor(63,1387
static void dijkstra_corridor_inv(162,5124
#define hardnesspair_inv(215,6446
static int connect_two_rooms(265,9117
static int create_cycle(284,9769
static int connect_rooms(326,11334
int gaussian[gaussian339,11527
typedef struct queue_node 347,11683
  int x,348,11711
  int x, y;348,11711
  struct queue_node *next;next349,11723
} queue_node_t;350,11750
static int smooth_hardness(352,11767
static int empty_dungeon(511,16038
static int place_rooms(530,16414
static void place_stairs(567,17601
static int make_rooms(589,18236
int gen_dungeon(612,18799
void render_dungeon(625,18961
void delete_dungeon(668,20107
void init_dungeon(675,20241
int write_dungeon_map(682,20398
int write_rooms(695,20627
uint16_t count_up_stairs(717,21099
uint16_t count_down_stairs(733,21350
int write_stairs(749,21605
uint32_t calculate_dungeon_size(781,22360
int write_dungeon(792,22831
int read_dungeon_map(858,24386
int read_stairs(881,24984
int read_rooms(904,25461
int read_dungeon(962,27387
int read_pgm(1043,29264
void render_hardness_map(1128,31667
void render_movement_cost_map(1151,32194
void render_distance_map(1173,32699
void render_tunnel_distance_map(1212,33733

dungeon.h,1591
# define DUNGEON_H2,18
#define DUNGEON_X 8,101
#define DUNGEON_Y 9,135
#define MIN_ROOMS 10,169
#define MAX_ROOMS 11,202
#define ROOM_MIN_X 12,236
#define ROOM_MIN_Y 13,269
#define ROOM_MAX_X 14,302
#define ROOM_MAX_Y 15,336
#define VISUAL_RANGE 16,370
#define PC_SPEED 17,404
#define NPC_MIN_SPEED 18,438
#define NPC_MAX_SPEED 19,471
#define MAX_MONSTERS 20,505
#define SAVE_DIR 21,539
#define DUNGEON_SAVE_FILE 22,580
#define DUNGEON_SAVE_SEMANTIC 23,621
#define DUNGEON_SAVE_VERSION 24,667
#define mappair(26,702
#define mapxy(27,759
#define hardnesspair(28,794
#define hardnessxy(29,861
#define charpair(30,906
#define charxy(31,970
typedef enum __attribute__ ((__packed__)) terrain_type 33,1013
  ter_debug,34,1070
  ter_wall,35,1083
  ter_wall_immutable,36,1095
  ter_floor,37,1117
  ter_floor_room,38,1130
  ter_floor_hall,39,1148
  ter_stairs,40,1166
  ter_stairs_up,41,1180
  ter_stairs_down42,1197
} terrain_type_t;43,1215
typedef struct room 45,1234
  pair_t position;46,1256
  pair_t size;47,1275
} room_t;48,1290
typedef struct dungeon 50,1301
  uint32_t num_rooms;51,1326
  room_t *rooms;rooms52,1348
  terrain_type_t map[map53,1365
  uint8_t hardness[hardness62,2018
  uint8_t pc_distance[pc_distance63,2060
  uint8_t pc_tunnel[pc_tunnel64,2105
  character_t *character[character65,2148
  character_t pc;66,2196
  heap_t events;67,2214
  uint16_t num_monsters;68,2231
  uint16_t max_monsters;69,2256
  uint32_t character_sequence_number;70,2281
  uint32_t time;76,2705
  uint32_t is_new;77,2722
} dungeon_t;78,2741

event.c,179
static uint32_t next_event_number(7,83
int32_t compare_events(17,409
event_t *new_event(new_event28,729
event_t *update_event(update_event45,1007
void event_delete(53,1155

event.h,307
# define EVENT_H2,16
typedef struct character character_t;8,79
typedef enum event_type 10,118
  event_character_turn,11,144
} event_type_t;12,168
typedef struct event 14,185
  event_type_t type;15,208
  uint32_t time;16,229
  uint32_t sequence;17,246
    character_t *c;c19,277
} event_t;21,302

heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

move.c,167
void do_combat(18,271
void move_character(31,592
void do_moves(47,1073
void dir_nearest_wall(126,3490
uint32_t against_wall(138,3905
uint32_t in_corner(150,4393

move.h,104
# define MOVE_H2,15
typedef struct dungeon dungeon_t;8,74
typedef struct character character_t;9,108

npc.c,833
void npc_delete(13,193
static uint32_t max_monster_cells(20,252
#define min(34,499
void gen_monsters(40,603
void npc_next_pos_rand_tunnel(83,2043
    uint32_t i;87,2140
    uint8_t a[a88,2156
void npc_next_pos_rand(128,2902
    uint32_t i;132,2992
    uint8_t a[a133,3008
void npc_next_pos_line_of_sight(160,3467
void npc_next_pos_line_of_sight_tunnel(184,4167
void npc_next_pos_gradient(219,4986
static void npc_next_pos_00(342,9678
static void npc_next_pos_01(354,10075
static void npc_next_pos_02(373,10730
static void npc_next_pos_03(381,11040
static void npc_next_pos_04(387,11215
static void npc_next_pos_05(399,11619
static void npc_next_pos_06(418,12281
static void npc_next_pos_07(426,12598
static void npc_next_pos_erratic(457,13543
void npc_next_pos(467,13825
uint32_t dungeon_has_npcs(475,14031

npc.h,1235
# define NPC_H2,14
# define NPC_SMART 8,72
# define NPC_TELEPATH 9,110
# define NPC_TUNNEL 10,148
# define NPC_ERRATIC 11,186
# define NPC_BIT04 12,224
# define NPC_BIT05 13,262
# define NPC_BIT06 14,300
# define NPC_BIT07 15,338
# define NPC_BIT08 16,376
# define NPC_BIT09 17,414
# define NPC_BIT10 18,452
# define NPC_BIT11 19,490
# define NPC_BIT12 20,528
# define NPC_BIT13 21,566
# define NPC_BIT14 22,604
# define NPC_BIT15 23,642
# define NPC_BIT16 24,680
# define NPC_BIT17 25,718
# define NPC_BIT18 26,756
# define NPC_BIT19 27,794
# define NPC_BIT20 28,832
# define NPC_BIT21 29,870
# define NPC_BIT22 30,908
# define NPC_BIT23 31,946
# define NPC_BIT24 32,984
# define NPC_BIT25 33,1022
# define NPC_BIT26 34,1060
# define NPC_BIT27 35,1098
# define NPC_BIT28 36,1136
# define NPC_BIT29 37,1174
# define NPC_BIT30 38,1212
# define NPC_BIT31 39,1250
# define has_characteristic(41,1289
typedef struct dungeon dungeon_t;44,1399
typedef struct character character_t;45,1433
typedef uint32_t npc_characteristics_t;46,1471
typedef struct npc 48,1512
  npc_characteristics_t characteristics;49,1533
  uint32_t have_seen_pc;50,1574
  pair_t pc_last_known_position;51,1599
} npc_t;53,1633

path.c,302
static dungeon_t *dungeon;dungeon15,673
typedef struct path 17,701
  heap_node_t *hn;hn18,723
  uint8_t pos[pos19,742
} path_t;20,760
static int32_t dist_cmp(22,771
static int32_t tunnel_cmp(29,1125
void dijkstra(36,1473
#define tunnel_movement_cost(146,5965
void dijkstra_tunnel(149,6057

path.h,93
# define PATH_H2,15
# define HARDNESS_PER_TURN 4,32
typedef struct dungeon dungeon_t;6,63

pc.c,157
void pc_delete(11,135
uint32_t pc_is_alive(18,195
void place_pc(23,257
void config_pc(33,684
uint32_t pc_next_pos(53,1102
uint32_t pc_in_room(173,5898

pc.h,99
# define PC_H2,13
typedef struct dungeon dungeon_t;8,70
typedef struct pc 10,105
} pc_t;11,125

rlg327.c,171
const char *victory victory14,215
const char *tombstone tombstone45,1786
void usage(66,2837
void io_init_terminal(77,3121
void game_loop(87,3224
int main(281,8782

utils.c,25
int makedirectory(9,124

utils.h,123
# define UTILS_H2,16
# define rand_under(9,190
# define rand_range(13,333
#define malloc(15,407
#define UNUSED(21,551
