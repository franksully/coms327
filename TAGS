
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3342
#define DUMP_HARDNESS_IMAGES 15,245
# define rand_under(19,390
# define rand_range(23,533
# define UNUSED(24,606
#define malloc(26,637
typedef struct corridor_path 32,781
  heap_node_t *hn;hn33,812
  uint8_t pos[pos34,831
  uint8_t from[from35,849
  int32_t cost;36,868
} corridor_path_t;37,884
typedef struct monster_path 39,904
  heap_node_t *hn;hn40,934
  uint8_t pos[pos41,953
  int32_t cost;42,971
} monster_path_t;43,987
typedef enum dim 45,1006
  dim_x,46,1025
  dim_y,47,1034
  num_dims48,1043
} dim_t;49,1054
typedef int8_t pair_t[pair_t51,1064
#define DUNGEON_X 53,1098
#define DUNGEON_Y 54,1132
#define MIN_ROOMS 55,1166
#define MAX_ROOMS 56,1199
#define ROOM_MIN_X 57,1233
#define ROOM_MIN_Y 58,1266
#define ROOM_MAX_X 59,1299
#define ROOM_MAX_Y 60,1333
#define SAVE_DIR 61,1367
#define DUNGEON_SAVE_FILE 62,1408
#define DUNGEON_SAVE_SEMANTIC 63,1449
#define DUNGEON_SAVE_VERSION 64,1495
#define mappair(66,1530
#define mapxy(67,1587
#define hardnesspair(68,1622
#define hardnessxy(69,1689
#define distance1xy(70,1734
#define distance2xy(71,1786
typedef enum __attribute__ ((__packed__)) terrain_type 73,1839
  ter_debug,74,1896
  ter_wall,75,1909
  ter_wall_immutable,76,1921
  ter_floor,77,1943
  ter_floor_room,78,1956
  ter_floor_hall,79,1974
  ter_stairs,80,1992
  ter_stairs_up,81,2006
  ter_stairs_down82,2023
} terrain_type_t;83,2041
typedef struct room 85,2060
  pair_t position;86,2082
  pair_t size;87,2101
} room_t;88,2116
typedef struct dungeon 90,2127
  uint16_t num_rooms;91,2152
  room_t *rooms;rooms92,2174
  terrain_type_t map[map93,2191
  uint8_t hardness[hardness102,2844
  pair_t pc;103,2886
	int32_t distance_map_1[distance_map_1104,2899
	int32_t distance_map_2[distance_map_2105,2963
} dungeon_t;106,3023
static uint32_t in_room(108,3037
static uint32_t adjacent_to_room(124,3428
static uint32_t is_open_space(132,3689
static int32_t monster_path_cmp(137,3788
static int32_t corridor_path_cmp(141,3935
static void dijkstra_monster_nodig(145,4085
static void dijkstra_monster_dig(292,9491
static void dijkstra_corridor(446,15217
static void dijkstra_corridor_inv(545,18956
#define hardnesspair_inv(598,20278
static int connect_two_rooms(648,22949
static int create_cycle(667,23601
static int connect_rooms(709,25166
int gaussian[gaussian722,25359
typedef struct queue_node 730,25515
  int x,731,25543
  int x, y;731,25543
  struct queue_node *next;next732,25555
} queue_node_t;733,25582
static int smooth_hardness(735,25599
static int empty_dungeon(894,29870
static int place_rooms(913,30246
static void place_stairs(950,31433
static int make_rooms(972,32068
int gen_dungeon(995,32631
void render_dungeon(1008,32793
void delete_dungeon(1048,33719
void init_dungeon(1053,33776
int write_dungeon_map(1058,33833
int write_rooms(1071,34062
uint16_t count_up_stairs(1093,34534
uint16_t count_down_stairs(1109,34785
int write_stairs(1125,35040
uint32_t calculate_dungeon_size(1157,35795
int makedirectory(1168,36266
int write_dungeon(1203,36902
int read_dungeon_map(1269,38439
int read_stairs(1292,39037
int read_rooms(1315,39514
int read_dungeon(1373,41440
int read_pgm(1454,43299
void usage(1539,45702
void render_distance_1(1549,45912
void render_distance_2(1570,46403
int main(1591,46867
