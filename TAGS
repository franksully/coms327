
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,2354
# define rand_under(16,339
# define rand_range(20,482
# define UNUSED(21,555
#define malloc(23,586
typedef struct corridor_path 29,730
  heap_node_t *hn;hn30,761
  uint8_t pos[pos31,780
  uint8_t from[from32,798
  int32_t cost;33,817
} corridor_path_t;34,833
typedef enum dim 36,853
  dim_x,37,872
  dim_y,38,881
  num_dims39,890
} dim_t;40,901
typedef int16_t pair_t[pair_t42,911
#define DUNGEON_X 44,946
#define DUNGEON_Y 45,980
#define MIN_ROOMS 46,1014
#define MAX_ROOMS 47,1047
#define ROOM_MIN_X 48,1081
#define ROOM_MIN_Y 49,1114
#define ROOM_MAX_X 50,1147
#define ROOM_MAX_Y 51,1181
#define mappair(53,1216
#define mapxy(54,1273
#define hardnesspair(55,1308
#define hardnessxy(56,1375
typedef enum __attribute__ ((__packed__)) terrain_type 58,1421
  ter_debug,59,1478
  ter_wall,60,1491
  ter_wall_immutable,61,1503
  ter_floor,62,1525
  ter_floor_room,63,1538
  ter_floor_hall,64,1556
  ter_stairs,65,1574
  ter_stairs_up,66,1588
  ter_stairs_down67,1605
} terrain_type_t;68,1623
typedef struct room 70,1642
  pair_t position;71,1664
  pair_t size;72,1683
} room_t;73,1698
typedef struct pc 75,1709
  uint8_t x,76,1729
  uint8_t x,y;76,1729
} pc_t;77,1744
typedef struct dungeon 79,1753
  uint32_t num_rooms;80,1778
  room_t rooms[rooms81,1800
  terrain_type_t map[map82,1827
  pc_t pc;91,2480
  uint8_t hardness[hardness92,2491
} dungeon_t;93,2533
static uint32_t in_room(95,2547
static uint32_t adjacent_to_room(111,2938
static uint32_t is_open_space(119,3199
static int32_t corridor_path_cmp(124,3298
static void dijkstra_corridor(128,3448
static void dijkstra_corridor_inv(227,7185
#define hardnesspair_inv(280,8507
static int connect_two_rooms(330,11178
static int create_cycle(349,11830
static int connect_rooms(391,13395
int gaussian[gaussian404,13588
typedef struct queue_node 412,13744
  int x,413,13772
  int x, y;413,13772
  struct queue_node *next;next414,13784
} queue_node_t;415,13811
static int smooth_hardness(417,13828
static int empty_dungeon(571,18002
static int place_rooms(590,18378
static void place_stairs(627,19565
static int make_rooms(649,20200
int gen_dungeon(673,20748
void render_dungeon(686,20910
void delete_dungeon(722,21675
void init_dungeon(726,21714
void file_save(731,21771
void file_load(739,21944
int main(818,24044
