
heap.c,1020
struct heap_node 8,99
  heap_node_t *next;next9,118
  heap_node_t *prev;prev10,139
  heap_node_t *parent;parent11,160
  heap_node_t *child;child12,183
  void *datum;datum13,205
  uint32_t degree;14,220
  uint32_t mark;15,239
#define swap(18,260
#define splice_heap_node_lists(24,372
#define insert_heap_node_in_list(33,684
#define remove_heap_node_from_list(40,908
void print_heap_node(45,1041
void print_heap(61,1363
void print_heap_node_list(78,1665
void heap_init(94,1864
void heap_node_delete(104,2100
void heap_delete(122,2404
heap_node_t *heap_insert(heap_insert133,2569
void *heap_peek_min(heap_peek_min153,2895
static void heap_link(158,2971
static void heap_consolidate(172,3293
void *heap_remove_min(heap_remove_min213,4226
int heap_combine(248,4760
static void heap_cut(277,5411
static void heap_cascading_cut(291,5692
int heap_decrease_key(305,5918
int heap_decrease_key_no_replace(319,6160
int32_t compare(343,6734
char *print_int(print_int348,6833
int main(357,6951

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

rlg327.c,3227
#define DUMP_HARDNESS_IMAGES 15,245
# define rand_under(19,390
# define rand_range(23,533
# define UNUSED(24,606
#define malloc(26,637
typedef struct corridor_path 32,781
  heap_node_t *hn;hn33,812
  uint8_t pos[pos34,831
  uint8_t from[from35,849
  int32_t cost;36,868
} corridor_path_t;37,884
typedef struct monster_path 39,904
  heap_node_t *hn;hn40,934
  uint8_t pos[pos41,953
  int32_t cost;42,971
} monster_path_t;43,987
typedef enum dim 45,1006
  dim_x,46,1025
  dim_y,47,1034
  num_dims48,1043
} dim_t;49,1054
typedef int8_t pair_t[pair_t51,1064
#define DUNGEON_X 53,1098
#define DUNGEON_Y 54,1132
#define MIN_ROOMS 55,1166
#define MAX_ROOMS 56,1199
#define ROOM_MIN_X 57,1233
#define ROOM_MIN_Y 58,1266
#define ROOM_MAX_X 59,1299
#define ROOM_MAX_Y 60,1333
#define SAVE_DIR 61,1367
#define DUNGEON_SAVE_FILE 62,1408
#define DUNGEON_SAVE_SEMANTIC 63,1449
#define DUNGEON_SAVE_VERSION 64,1495
#define mappair(66,1530
#define mapxy(67,1587
#define hardnesspair(68,1622
#define hardnessxy(69,1689
#define distance1xy(70,1734
typedef enum __attribute__ ((__packed__)) terrain_type 72,1787
  ter_debug,73,1844
  ter_wall,74,1857
  ter_wall_immutable,75,1869
  ter_floor,76,1891
  ter_floor_room,77,1904
  ter_floor_hall,78,1922
  ter_stairs,79,1940
  ter_stairs_up,80,1954
  ter_stairs_down81,1971
} terrain_type_t;82,1989
typedef struct room 84,2008
  pair_t position;85,2030
  pair_t size;86,2049
} room_t;87,2064
typedef struct dungeon 89,2075
  uint16_t num_rooms;90,2100
  room_t *rooms;rooms91,2122
  terrain_type_t map[map92,2139
  uint8_t hardness[hardness101,2792
  pair_t pc;102,2834
	int32_t distance_map_1[distance_map_1103,2847
} dungeon_t;104,2894
static uint32_t in_room(106,2908
static uint32_t adjacent_to_room(122,3299
static uint32_t is_open_space(130,3560
static int32_t monster_path_cmp(135,3659
static int32_t corridor_path_cmp(139,3806
static void dijkstra_monster_nodig(143,3956
static void dijkstra_monster_dig(290,9362
static void dijkstra_corridor(444,15112
static void dijkstra_corridor_inv(543,18851
#define hardnesspair_inv(596,20173
static int connect_two_rooms(646,22844
static int create_cycle(665,23496
static int connect_rooms(707,25061
int gaussian[gaussian720,25254
typedef struct queue_node 728,25410
  int x,729,25438
  int x, y;729,25438
  struct queue_node *next;next730,25450
} queue_node_t;731,25477
static int smooth_hardness(733,25494
static int empty_dungeon(892,29765
static int place_rooms(911,30141
static void place_stairs(948,31328
static int make_rooms(970,31963
int gen_dungeon(993,32526
void render_dungeon(1006,32688
void delete_dungeon(1046,33614
void init_dungeon(1051,33671
int write_dungeon_map(1056,33728
int write_rooms(1069,33957
uint16_t count_up_stairs(1091,34429
uint16_t count_down_stairs(1107,34680
int write_stairs(1123,34935
uint32_t calculate_dungeon_size(1155,35690
int makedirectory(1166,36161
int write_dungeon(1201,36797
int read_dungeon_map(1267,38334
int read_stairs(1290,38932
int read_rooms(1313,39409
int read_dungeon(1371,41335
int read_pgm(1452,43194
void usage(1537,45597
void render_distance(1547,45807
int main(1572,46377
